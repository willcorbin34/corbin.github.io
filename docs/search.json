[
  {
    "objectID": "quickhitters.html",
    "href": "quickhitters.html",
    "title": "Quick Hitters",
    "section": "",
    "text": "Data via NBA.com."
  },
  {
    "objectID": "quickhitters.html#point-rate-exploration-2024-2025-nba-regular-season",
    "href": "quickhitters.html#point-rate-exploration-2024-2025-nba-regular-season",
    "title": "Quick Hitters",
    "section": "",
    "text": "Data via NBA.com."
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "About"
  },
  {
    "objectID": "quick_hitters/3pointrate_graph.html",
    "href": "quick_hitters/3pointrate_graph.html",
    "title": "Will Corbin - Analytics Portfolio",
    "section": "",
    "text": "import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nfrom matplotlib.offsetbox import OffsetImage, AnnotationBbox\nfrom adjustText import adjust_text\n\n\nthree_rates_df = pd.read_csv('NBA 3 Point Rates 2024-2025.csv')\nthree_rates_df.head()\n\n\n\n\n\n\n\n\nTeam\n3PT_Rate_2025\n3PT_Rate_2024\nOff_Rtg_2025\nDef_Rtg_2025\nNet_Rtg_2025\nOff_Rtg_2024\n3PT_Def_Rate_2025\n\n\n\n\n0\nBOS\n53.6\n47.1\n119.5\n110.1\n9.4\n122.2\n41.5\n\n\n1\nGSW\n46.9\n42.5\n114.2\n111.0\n3.2\n116.9\n41.8\n\n\n2\nBKN\n45.8\n41.2\n108.1\n115.4\n-7.3\n112.4\n42.4\n\n\n3\nCLE\n45.7\n42.2\n121.0\n111.8\n9.2\n114.7\n41.3\n\n\n4\nCHI\n45.7\n35.8\n113.2\n114.8\n-1.6\n114.0\n41.7\n\n\n\n\n\n\n\n\natl_test = three_rates_df[three_rates_df['Team'] == 'ATL']\natl_test.head()\n\n\n\n\n\n\n\n\nTeam\n3PT_Rate_2025\n3PT_Rate_2024\nOff_Rtg_2025\nDef_Rtg_2025\nNet_Rtg_2025\nOff_Rtg_2024\n3PT_Def_Rate_2025\n\n\n\n\n18\nATL\n41.0\n40.8\n113.7\n114.8\n-1.1\n116.4\n41.9\n\n\n\n\n\n\n\n\natl_test['Logo'] = ['ATL']\n\n/var/folders/3b/fsnqd8hj7y74xsbt20zbpdf80000gn/T/ipykernel_44248/2031218394.py:1: SettingWithCopyWarning: \nA value is trying to be set on a copy of a slice from a DataFrame.\nTry using .loc[row_indexer,col_indexer] = value instead\n\nSee the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n  atl_test['Logo'] = ['ATL']\n\n\n\natl_test.head()\n\n\n\n\n\n\n\n\nTeam\n3PT_Rate_2025\n3PT_Rate_2024\nOff_Rtg_2025\nDef_Rtg_2025\nNet_Rtg_2025\nOff_Rtg_2024\n3PT_Def_Rate_2025\nLogo\n\n\n\n\n18\nATL\n41.0\n40.8\n113.7\n114.8\n-1.1\n116.4\n41.9\nATL\n\n\n\n\n\n\n\n\ndef getImage(path):\n    return OffsetImage(plt.imread(f\"../logos/{path}.png\"), zoom=.05, alpha = 1)\n\n\nfig, ax = plt.subplots()\n\nax.scatter(atl_test['3PT_Rate_2025'], atl_test['Off_Rtg_2025'])\n\nfor index, row in atl_test.iterrows():\n    ab = AnnotationBbox(getImage(row['Team']), (row['3PT_Rate_2025'], row['Off_Rtg_2025']), frameon=False)\n    ax.add_artist(ab)\n    \n\nfig.suptitle(\"3 Point Rates vs Offensive Rating\", fontsize=16)\n\nax.set_title(\"2024-2025 NBA Regular Season\")\nax.set_xlabel('Offensive 3 Point Rate')\nax.set_ylabel('Offensive Rating')\n\nplt.show()\n\n\n\n\n\n\n\n\n\nfig, ax = plt.subplots(figsize=(8,6))\n\nx = three_rates_df['3PT_Rate_2025']\ny = three_rates_df['Off_Rtg_2025']\n\nax.scatter(x, y, alpha=0)\n\n#texts = []\n#for x, y, s in zip(x, y, texts):\n#    plt.text(x, y, ha='center', va='center', fontsize=12)\n#    texts.append(plt.text(x, y, ha='center', va='center', fontsize=12))\n\nlabels = three_rates_df['Team']\ntexts = []\nfor i, label in enumerate(labels):\n    texts.append(ax.text(x[i], y[i], label, ha='center', va='center', fontsize=10))\n    #plt.annotate(label, (x[i], y[i]), textcoords=\"offset points\", xytext=(0,5), ha='center')\n\nfig.suptitle(\"3 Point Rates vs Offensive Rating\", fontsize=16)\nax.set_title(\"2024-2025 NBA Regular Season\")\nax.set_xlabel('Offensive 3 Point Rate')\nax.set_ylabel('Offensive Rating')\n\nadjust_text(texts, only_move={'points':'y', 'texts':'y'})\nplt.style.use(\"../analytics_matplot.mplstyle\")\nplt.show()\n\n\n\n\n\n\n\n\n\nfig, ax = plt.subplots(figsize=(8,6))\n\ny = three_rates_df['3PT_Rate_2025']\nx = three_rates_df['Off_Rtg_2025']\n\nax.scatter(x, y, alpha=0)\n\n#texts = []\n#for x, y, s in zip(x, y, texts):\n#    plt.text(x, y, ha='center', va='center', fontsize=12)\n#    texts.append(plt.text(x, y, ha='center', va='center', fontsize=12))\n\nlabels = three_rates_df['Team']\ntexts = []\nfor i, label in enumerate(labels):\n    texts.append(ax.text(x[i], y[i], label, ha='center', va='center', fontsize=10))\n    #plt.annotate(label, (x[i], y[i]), textcoords=\"offset points\", xytext=(0,5), ha='center')\n\nfig.suptitle(\"3 Point Rates vs Offensive Rating\", fontsize=16)\nax.set_title(\"2024-2025 NBA Regular Season\")\nax.set_xlabel('Offensive Rating')\nax.set_ylabel('Offensive 3 Point Rate')\n\nadjust_text(texts, only_move={'points':'y', 'texts':'y'})\nplt.style.use(\"../analytics_matplot.mplstyle\")\nplt.show()\n\n\n\n\n\n\n\n\n\nfig, ax = plt.subplots(figsize=(8,6))\n\nx = three_rates_df['3PT_Rate_2025']\ny = three_rates_df['3PT_Def_Rate_2025']\n\nax.scatter(x, y, alpha=0)\n\n#y=x line\nlims = [\n    np.min([ax.get_xlim(), ax.get_ylim()]),  # min of both axes\n    np.max([ax.get_xlim(), ax.get_ylim()]),  # max of both axes\n]\nax.plot(lims, lims, 'k-', alpha=0.75, zorder=0)\n\n#texts = []\n#for x, y, s in zip(x, y, texts):\n#    plt.text(x, y, ha='center', va='center', fontsize=12)\n#    texts.append(plt.text(x, y, ha='center', va='center', fontsize=12))\n\nlabels = three_rates_df['Team']\ntexts = []\nfor i, label in enumerate(labels):\n    texts.append(ax.text(x[i], y[i], label, ha='center', va='center', fontsize=10))\n    #plt.annotate(label, (x[i], y[i]), textcoords=\"offset points\", xytext=(0,5), ha='center')\n\nax.invert_yaxis()\n\nfig.suptitle(\"Shooting the 3 vs Taking Away the 3\", fontsize=16)\nax.set_title(\"2024-2025 NBA Regular Season\")\nax.set_xlabel('Offensive 3 Point Rate')\nax.set_ylabel('Defensive 3 Point Rate')\n\nadjust_text(texts, only_move={'points':'y', 'texts':'y'})\nplt.style.use(\"../analytics_matplot.mplstyle\")\nplt.show()\n\n\n\n\n\n\n\n\n\nfig, ax = plt.subplots(figsize=(8,6))\n\nthree_rates_df['3PT_Rate_Diff_2025'] = three_rates_df['3PT_Rate_2025'] - three_rates_df['3PT_Def_Rate_2025']\nsorted_df = three_rates_df.sort_values('3PT_Rate_Diff_2025', ascending=False)\n\ny = sorted_df['3PT_Rate_Diff_2025']\nlabels = sorted_df['Team']\n\nax.bar(labels, y, color='lightsteelblue')\n\n#texts = []\n#for x, y, s in zip(x, y, texts):\n#    plt.text(x, y, ha='center', va='center', fontsize=12)\n#    texts.append(plt.text(x, y, ha='center', va='center', fontsize=12))\n\nplt.xticks(rotation=90)\nfig.suptitle(\"Shooting the 3 vs Taking Away the 3\", fontsize=16)\nax.set_title(\"Teams with the largest differences in 3PT rate in the 2024-2025 NBA regular season\")\nax.set_ylabel('Difference in Offensive 3PT Rate and Defensive 3PT Rate (%)')\nax.set_xlabel('Team')\n\nadjust_text(texts, only_move={'points':'y', 'texts':'y'})\nplt.style.use(\"../analytics_matplot.mplstyle\")\nplt.show()\n\n\n\n\n\n\n\n\n\nfig, ax = plt.subplots(figsize=(8,6))\n\nbetween_seasons = three_rates_df[['Team', '3PT_Rate_2025', '3PT_Rate_2024']]\nbetween_seasons['25_to_24_diff'] = between_seasons['3PT_Rate_2025'] - between_seasons['3PT_Rate_2024']\nsorted_between_seasons = between_seasons.sort_values('25_to_24_diff', ascending=False)\n\ny = sorted_between_seasons['25_to_24_diff']\nlabels = sorted_between_seasons['Team']\n\nax.bar(labels, y, color='lightsteelblue')\n\n#texts = []\n#for x, y, s in zip(x, y, texts):\n#    plt.text(x, y, ha='center', va='center', fontsize=12)\n#    texts.append(plt.text(x, y, ha='center', va='center', fontsize=12))\n\nplt.xticks(rotation=90)\nfig.suptitle(\"Change in Offensive 3 Point Rates\", fontsize=16)\nax.set_title(\"Between the 23-24 and 24-25 regular seasons, which teams shot more 3s?\")\nax.set_ylabel('Difference in Offensive 3PT Rate From 23-24 to 24-25 (%)')\nax.set_xlabel('Team')\n\nadjust_text(texts, only_move={'points':'y', 'texts':'y'})\nplt.style.use(\"../analytics_matplot.mplstyle\")\nplt.show()\n\n/var/folders/3b/fsnqd8hj7y74xsbt20zbpdf80000gn/T/ipykernel_2786/2431081051.py:4: SettingWithCopyWarning: \nA value is trying to be set on a copy of a slice from a DataFrame.\nTry using .loc[row_indexer,col_indexer] = value instead\n\nSee the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n  between_seasons['25_to_24_diff'] = between_seasons['3PT_Rate_2025'] - between_seasons['3PT_Rate_2024']\n\n\n\n\n\n\n\n\n\n\nfig, ax = plt.subplots(figsize=(8,6))\n\ny = three_rates_df['3PT_Rate_2025'] - three_rates_df['3PT_Rate_2024']\nx = three_rates_df['Off_Rtg_2025'] - three_rates_df['Off_Rtg_2024']\n\nax.scatter(x, y, alpha=0)\nax.axhline(0, color=\"black\", alpha=0.75, linestyle=\"--\")\nax.axvline(0, color=\"black\", alpha=0.75, linestyle=\"--\")\n\n#texts = []\n#for x, y, s in zip(x, y, texts):\n#    plt.text(x, y, ha='center', va='center', fontsize=12)\n#    texts.append(plt.text(x, y, ha='center', va='center', fontsize=12))\n\nlabels = three_rates_df['Team']\ntexts = []\nfor i, label in enumerate(labels):\n    texts.append(ax.text(x[i], y[i], label, ha='center', va='center', fontsize=10))\n    #plt.annotate(label, (x[i], y[i]), textcoords=\"offset points\", xytext=(0,5), ha='center')\n    \nplt.text(5, -3, 'Better Offense, Less 3s', ha='center', va='bottom', color='cornflowerblue')   \nplt.text(5, 8, 'Better Offense, More 3s', ha='center', va='bottom', color='cornflowerblue') \nplt.text(-4, 8, 'Worse Offense, More 3s', ha='center', va='bottom', color='cornflowerblue') \nplt.text(-4, -3, 'Worse Offense, Less 3s', ha='center', va='bottom', color='cornflowerblue') \n\nfig.suptitle(\"Change in 3 Point Rates vs Change in Offensive Rating\", fontsize=16)\nax.set_title(\"Between the 23-24 and 24-25 NBA Regular Seasons\")\nax.set_xlabel('Change in Offensive Rating')\nax.set_ylabel('Change in Offensive 3 Point Rate')\n\nadjust_text(texts, only_move={'points':'y', 'texts':'y'})\nplt.style.use(\"../analytics_matplot.mplstyle\")\nplt.show()"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Home",
    "section": "",
    "text": "Home"
  }
]